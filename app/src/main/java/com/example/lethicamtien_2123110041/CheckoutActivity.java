package com.example.lethicamtien_2123110041;

import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.*;

import androidx.appcompat.app.AppCompatActivity;
import com.bumptech.glide.Glide;

import java.util.ArrayList;

public class CheckoutActivity extends AppCompatActivity {

    EditText edtAddress;
    Button btnOrder;
    TextView txtTotal;
    RadioGroup rgShipping, rgPayment;
    LinearLayout layoutProducts; // Ch·ª©a nhi·ªÅu s·∫£n ph·∫©m khi mua t·ª´ gi·ªè h√†ng

    Product product; // Cho mua ngay 1 sp
    ArrayList<CartItem> selectedItems; // Cho nhi·ªÅu sp t·ª´ gi·ªè h√†ng

    int totalPrice = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_checkout);

        // √Ånh x·∫° view
        edtAddress = findViewById(R.id.edtAddress);
        btnOrder = findViewById(R.id.btnOrder);
        txtTotal = findViewById(R.id.txtTotal);
        rgShipping = findViewById(R.id.rgShipping);
        rgPayment = findViewById(R.id.rgPayment);
        layoutProducts = findViewById(R.id.layoutProducts); // LinearLayout ch·ª©a s·∫£n ph·∫©m

        // Ki·ªÉm tra: mua 1 s·∫£n ph·∫©m hay nhi·ªÅu s·∫£n ph·∫©m
        product = (Product) getIntent().getSerializableExtra("product");
        selectedItems = (ArrayList<CartItem>) getIntent().getSerializableExtra("cart_items");

        if (product != null) {
            // üí• X√ìA selectedItems ƒë·ªÉ kh√¥ng hi·ªÉn th·ªã nh·∫ßm
            selectedItems = null;
            showSingleProduct();
        } else if (selectedItems != null && !selectedItems.isEmpty()) {
            showMultipleProducts();
        }


        btnOrder.setOnClickListener(v -> {
            String address = edtAddress.getText().toString().trim();
            int shippingId = rgShipping.getCheckedRadioButtonId();
            int paymentId = rgPayment.getCheckedRadioButtonId();

            if (address.isEmpty()) {
                Toast.makeText(this, "Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ giao h√†ng!", Toast.LENGTH_SHORT).show();
                return;
            }

            if (shippingId == -1 || paymentId == -1) {
                Toast.makeText(this, "Vui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c v·∫≠n chuy·ªÉn v√† thanh to√°n!", Toast.LENGTH_SHORT).show();
                return;
            }

            RadioButton shipping = findViewById(shippingId);
            RadioButton payment = findViewById(paymentId);

            StringBuilder summary = new StringBuilder("‚úÖ ƒê·∫∑t h√†ng th√†nh c√¥ng\n");

            if (product != null) {
                String quantityStr = ((EditText) findViewById(R.id.edtQuantity)).getText().toString().trim();
                int quantity = quantityStr.isEmpty() ? 1 : Integer.parseInt(quantityStr);

                summary.append("T√™n: ").append(product.getName()).append("\n");
                summary.append("S·ªë l∆∞·ª£ng: ").append(quantity).append("\n");
                summary.append("T·ªïng: ").append(formatPrice(product.getPrice() * quantity)).append("\n");
            } else if (selectedItems != null) {
                for (CartItem item : selectedItems) {
                    summary.append("T√™n: ").append(item.getName())
                            .append(" - SL: ").append(item.getQuantity())
                            .append(" - ").append(formatPrice(item.getPrice() * item.getQuantity()))
                            .append("\n");
                }
                summary.append("T·ªïng: ").append(formatPrice(totalPrice)).append("\n");
            }

            summary.append("Giao ƒë·∫øn: ").append(address).append("\n");
            summary.append("V·∫≠n chuy·ªÉn: ").append(shipping.getText()).append("\n");
            summary.append("Thanh to√°n: ").append(payment.getText());

            Toast.makeText(this, summary.toString(), Toast.LENGTH_LONG).show();
        });
    }

    private void showSingleProduct() {
        layoutProducts.removeAllViews();
        View view = getLayoutInflater().inflate(R.layout.item_checkout_single, null);

        ImageView img = view.findViewById(R.id.imgProduct);
        TextView name = view.findViewById(R.id.txtProductName);
        TextView price = view.findViewById(R.id.txtPrice);
        EditText edtQuantity = view.findViewById(R.id.edtQuantity);

        name.setText(product.getName());
        price.setText("Gi√°: " + formatPrice(product.getPrice()));
        edtQuantity.setText("1");

        Glide.with(this).load(product.getImageUrl()).into(img);
        layoutProducts.addView(view);

        totalPrice = product.getPrice();
        txtTotal.setText("T·ªïng: " + formatPrice(totalPrice));

        edtQuantity.addTextChangedListener(new TextWatcher() {
            public void afterTextChanged(Editable s) {
                try {
                    int quantity = Integer.parseInt(s.toString());
                    totalPrice = product.getPrice() * quantity;
                } catch (Exception e) {
                    totalPrice = product.getPrice();
                }
                txtTotal.setText("T·ªïng: " + formatPrice(totalPrice));
            }
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            public void onTextChanged(CharSequence s, int start, int before, int count) {}
        });
    }


    private void showMultipleProducts() {
        layoutProducts.removeAllViews();
        totalPrice = 0;

        for (CartItem item : selectedItems) {
            View view = getLayoutInflater().inflate(R.layout.item_checkout_cart, null);

            ImageView img = view.findViewById(R.id.imgProduct);
            TextView name = view.findViewById(R.id.txtProductName);
            TextView price = view.findViewById(R.id.txtPrice);
            TextView qty = view.findViewById(R.id.txtQuantity); // B√¢y gi·ªù ƒë√∫ng ID

            name.setText(item.getName());
            price.setText("Gi√°: " + formatPrice(item.getPrice()));
            qty.setText("S·ªë l∆∞·ª£ng: " + item.getQuantity());

            Glide.with(this).load(item.getImageUrl()).into(img);

            totalPrice += item.getPrice() * item.getQuantity();
            layoutProducts.addView(view);
        }

        txtTotal.setText("T·ªïng: " + formatPrice(totalPrice));
    }

    private String formatPrice(int value) {
        return String.format("%,d", value).replace(",", ".") + "ƒë";
    }

}
